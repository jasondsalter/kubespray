The MetalLB Component

MetalLB is a load balancer component that provides a load balancing service for clusters that do not run on a cloud provider, such as a bare metal cluster, or clusters that run on hypervisors. MetalLB operates in two modes: layer 2 and Border Gateway Protocol (BGP), with different properties and requirements. You must plan the use of MetalLB to consider your requirements and your network design.
MetalLB is an operator that you can install with the Operator Lifecycle Manager. After installing the operator, you must configure MetalLB through its custom resource definitions. In most situations, you must provide MetalLB with an IP address range.

Network Attachment Definition
ovn-kubernetes - how pods get their interfaces
https://www.cncf.io/blog/2017/05/23/cncf-hosts-container-networking-interface-cni/

oc explain 

watch oc get deployments,pods

view all IPs on the Node
    oc debug node/master01 -- chroot /host ip addr

Compare difference between two files
diff ~/DO280/labs/non-http-multus/network-attachment-definition.yaml ~/DO280/solutions/non-http-multus/network-attachment-definition.yaml

Deployment.yml
--> api server ---> etcd ---Controller --> Scheduler
**********************************************************************
Create a deployment
    oc create deployment web --image nginx --port 8080 --replicas 2

Modify a deployment
    oc set resources

Scale a Deployment
    oc scale deployment xxxx --replicas=10

View a deployment
    oc describle deployment

************************************************************************
Resource limits
OS    oc set resources deployment/nginx --limits=cpu=200m,memory=512Mi --requests=cpu=100m,memory=256Mi   
k8s   kubectl set resources deployment/nginx --limits=cpu=200m,memory=512Mi --requests=cpu=100m,memory=256Mi

Resource Quotas
    Set a hard quora called one-cpu
      oc create quota one-cpu --hard=requests.cpu=1
      oc get quota one-cpu -o yaml

      oc explain ResourceQuota

Create Limit Ranges for project level quotas - do prior to making deployments


************************************************************************
Node specific
    oc describe node/master01
    oc adm top node

********************************************************************************
View event logs
    oc get ev 
